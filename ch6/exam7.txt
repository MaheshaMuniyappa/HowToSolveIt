ALGORITHM COMPUTERS                  Java Exam Questions
				Inheritance
1] Consider this class:
     public class Test1 {
          public float aMethod(float a, float b) {
          }
     }
     
Which   of  the  following  methods  would  be  legal  if   added 
(individually) at line 4 ?
     a. public int aMethod(int a, int b) { }
     b. public float aMethod(float a, float b) { }
     c. public float aMethod(float a, float b, int c) throws
        Exception { }
     d. public float aMethod(float c, float d) { }
     e. private float aMethod(int a, int b, int c) { }

2] Consider these classes, defined in separate source files:
     public class Text1 {
       public float aMehtod(float a, float b) throws IOException {
       }
     }

     public  class Test2 extends Test1 {
        // line 2    
     }
Which  of the following methods would be legal (individually)  at 
line 2 in class Test2 ?
     a. float aMethod(float a, float b) { }
     b. public int aMethod(int a int b) throws Exception { }
     c. public float aMethod(float a, float b) throws Exception { }
     d. public float aMethod(float p, float q) { }


3]  You  have  been given a design  document  for  a  veterinary 
registration system for implementation in Java. It states:
     "A pet has an owner, a registration date, and a vaccination-
due  date. A cat is a pet that has a flag indicating if  it  has 
been neutered, and textual description of its markings."

Given  that the pet class has already been defined, which of  the 
follwing  fields  would be appropriate for inclusion in  the  cat 
class as members?
     a. Pet the Pet;
     b. Date registered; 
     c. Date vaccinationDue;
     d. Cat theCat;
     e. boolean neutered;
     f. String markings;

4]  You  have  been given a design  document  for  a  veterinary 
registration stystem for implemntation in Java. It states:
     "A  pet  has an owner, a registration date. A cat is  a  pet 
that has a flag indicating it it has been ueutered, and a textual 
description  of its markings."

Given that the pet class has already been defined and you  expect 
the  Cat class to be used freely throughout the application,  how 
would  you make the opening declaration of the Cat class,  up  to 
but  not including the first opening brace? Use only  these  words 
and  spaces: boolean, Cat, class, Date, extends,  Object,  Owner, 
Pet, private, protected, public, String.

5]  Consider the following classes, declared in separate  source 
files:
     public class Base {
          public void method(int i) {
               System.out.println("Value is " + i);
          }
     }

     public class Sub extends Base {
          public void method(int j) {
               System.out.println("This value is " + j);
          }
          public void method(String s) {
               System.out.println( "I was passed " + s);
          }
          public static void main(String args[]) {
               Base b1 = new Base();
               Base b2 = new Sub();
               b1.method(5);
               b2.method(6);
          }
     }

What  output  results when the main methods of the class  Sub  is 
run?
     a. Value is 5
        Value is 6
     b. This value is 5
        This value is 6
     c. Value is 5
        This value is 6
     d. This value is 5
        Value is 6
     e. I was passed 5
        I was passed 6

6] Consider the following class definition:
     public class Test extends Base {
       public Test(int j) {
       }
       public Test(int j, int k) {
          super(j, k);
       }
     }
Which of the following are legimate calls to construct  instances 
of the Test class?
     a. Test t = new Test();
     b. Test t = new Test(1);
     c. Test t = new Test(1, 2);
     d. Test t = new Test(1,2,3);
     e. Test t = (new Base()).new Test(1);

7] Consider the following class definition:
     public class Test extends Base {
          public Test(int j) {
          }
          public Test(int j, int k) {
               super(j, k);
          }
     }
Which of the following forms of constructor must exist explicitly 
in the definition of the Base class?
     a. Base() { }
     b. Base(int j) { }
     c. Base(int j, int k) { }
     d. Base(int j, int k, int 1) { }







D:\javatrng\CH7\exam7.doc





